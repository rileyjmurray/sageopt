coniclifts uses the same exponential cone format as ECOS.
    K_exp = { (x,y,z) : y >= z * exp(x / z), z >= 0 }
The constraint that (u, v, w) \\in K_exp_dual can be represented by (-w, v, -u) \\in K_exp.
    (See Santiago Akle Serrano's thesis, Section 8.3, page 71.)
This cone is signified by the string 'e'.

The power cone constraint will be parameterized by an n-vector “alpha” that’s elementwise positive and sums to 1.
Informally, the constraint requires that ...
    { (w, z) : np.prod(np.power(w, alpha)) >= np.abs(z), w >= 0 }.
	    … where “w” is an n-vector and “z” is a scalar.
This cone is signified by the string 'pow'.

coniclifts uses the same second order cone format as ECOS and mosek.
    SOC(n) = { (t, x) \\in R^{n+1} : \| x \| \leq t }
This cone is signified by the string 'S'.
